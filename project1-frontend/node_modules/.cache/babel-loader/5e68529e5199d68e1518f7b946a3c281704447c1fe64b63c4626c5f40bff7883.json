{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshgerrard/Desktop/Java_Projects/Group-1/project1-frontend/src/components/AccountComponent/account-list.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Card, Container, Row, Col } from 'react-bootstrap';\nimport UpdateAccountModal from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"http://localhost:8080\";\nconst AccountList = () => {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  useEffect(() => {\n    // Fetch accounts on component mount\n    fetchAccounts();\n  }, []);\n  const fetchAccounts = () => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      var userId = user.id;\n      axios.get(`${API_BASE_URL}/users/${userId}/accounts`).then(response => {\n        setAccounts(response.data);\n      }).catch(error => {\n        console.error('Error fetching accounts:', error);\n      });\n    }\n  };\n  const handleUpdateAccount = updatedAccount => {\n    // Update the accounts list in state with the updated account\n    const updatedAccounts = accounts.map(account => account.accountId === updatedAccount.accountId ? updatedAccount : account);\n    setAccounts(updatedAccounts);\n  };\n  const handleEditAccount = account => {\n    setSelectedAccount(account);\n    setShowUpdateModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowUpdateModal(false);\n    setSelectedAccount(null);\n  };\n  const handleDeleteAccount = accountId => {\n    axios.delete(`${API_BASE_URL}/accounts/delete/${accountId}`).then(response => {\n      setAccounts(prevAccounts => prevAccounts.filter(account => account.accountId !== accountId));\n      console.log(`Account with ID ${accountId} deleted.`);\n    }).catch(error => {\n      console.error('Error deleting account:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Account List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: accounts.map(account => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: account.accountName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: [\"Balance: $\", account.balance]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Type: \", account.accountType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Credit Limit: $\", account.creditLimit]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => handleDeleteAccount(account.accountId),\n              children: \"Close Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => handleEditAccount(account),\n              children: \"Edit Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, account.accountId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), selectedAccount && /*#__PURE__*/_jsxDEV(UpdateAccountModal, {\n      account: selectedAccount,\n      show: showUpdateModal,\n      onHide: handleCloseModal,\n      onUpdate: handleUpdateAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountList, \"BNMtI2FPOuUR6LlTf+soPgb8cKw=\");\n_c = AccountList;\nexport default AccountList;\nvar _c;\n$RefreshReg$(_c, \"AccountList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Button","Card","Container","Row","Col","UpdateAccountModal","jsxDEV","_jsxDEV","API_BASE_URL","AccountList","_s","accounts","setAccounts","showUpdateModal","setShowUpdateModal","selectedAccount","setSelectedAccount","fetchAccounts","userString","localStorage","getItem","user","JSON","parse","userId","id","get","then","response","data","catch","error","console","handleUpdateAccount","updatedAccount","updatedAccounts","map","account","accountId","handleEditAccount","handleCloseModal","handleDeleteAccount","delete","prevAccounts","filter","log","children","fileName","_jsxFileName","lineNumber","columnNumber","xs","sm","md","lg","className","Body","Title","accountName","Text","style","fontWeight","balance","accountType","creditLimit","variant","onClick","show","onHide","onUpdate","_c","$RefreshReg$"],"sources":["/Users/utkarshgerrard/Desktop/Java_Projects/Group-1/project1-frontend/src/components/AccountComponent/account-list.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Card, Container, Row, Col } from 'react-bootstrap';\nimport UpdateAccountModal from './';\n\nconst API_BASE_URL = \"http://localhost:8080\";\n\nconst AccountList = () => {\n  const [accounts, setAccounts] = useState([]);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [selectedAccount, setSelectedAccount] = useState(null);\n\n  useEffect(() => {\n    // Fetch accounts on component mount\n    fetchAccounts();\n  }, []);\n\n  const fetchAccounts = () => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      var userId = user.id;\n      axios.get(`${API_BASE_URL}/users/${userId}/accounts`)\n        .then(response => {\n          setAccounts(response.data);\n        })\n        .catch(error => {\n          console.error('Error fetching accounts:', error);\n        });\n    }\n  };\n\n  const handleUpdateAccount = (updatedAccount) => {\n    // Update the accounts list in state with the updated account\n    const updatedAccounts = accounts.map(account =>\n      account.accountId === updatedAccount.accountId ? updatedAccount : account\n    );\n    setAccounts(updatedAccounts);\n  };\n\n  const handleEditAccount = (account) => {\n    setSelectedAccount(account);\n    setShowUpdateModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowUpdateModal(false);\n    setSelectedAccount(null);\n  };\n\n  const handleDeleteAccount = (accountId) => {\n    axios.delete(`${API_BASE_URL}/accounts/delete/${accountId}`)\n      .then(response => {\n        setAccounts(prevAccounts => prevAccounts.filter(account => account.accountId !== accountId));\n        console.log(`Account with ID ${accountId} deleted.`);\n      })\n      .catch(error => {\n        console.error('Error deleting account:', error);\n      });\n  };\n\n  return (\n    <Container>\n      <h1>Account List</h1>\n      <Row>\n        {accounts.map(account => (\n          <Col key={account.accountId} xs={12} sm={6} md={4} lg={3} className=\"mb-4\">\n            <Card>\n              <Card.Body>\n                <Card.Title>{account.accountName}</Card.Title>\n                <Card.Text>\n                  <div style={{ fontWeight: 'bold' }}>Balance: ${account.balance}</div>\n                  <div>Type: {account.accountType}</div>\n                  <div>Credit Limit: ${account.creditLimit}</div>\n                  {/* Add other details */}\n                </Card.Text>\n                <Button variant=\"danger\" onClick={() => handleDeleteAccount(account.accountId)}>Close Account</Button>\n                <Button variant=\"primary\" onClick={() => handleEditAccount(account)}>Edit Account</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n      {/* Modal for updating account */}\n      {selectedAccount && (\n        <UpdateAccountModal\n          account={selectedAccount}\n          show={showUpdateModal}\n          onHide={handleCloseModal}\n          onUpdate={handleUpdateAccount}\n        />\n      )}\n\n    </Container>\n  );\n};\n\nexport default AccountList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}