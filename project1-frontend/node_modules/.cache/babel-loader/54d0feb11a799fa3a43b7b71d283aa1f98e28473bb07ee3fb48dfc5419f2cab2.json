{"ast":null,"code":"var _jsxFileName = \"/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-page.js\",\n  _s = $RefreshSig$();\n// src/components/TransactionComponent/transaction-page.js\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Container, Row, Button, Form, Card } from \"react-bootstrap\";\nimport { TransactionContext } from \"./transaction-context\";\nimport TransactionList from \"./transaction-list\";\nimport AddTransactionForm from \"./add-transaction-form\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TransactionPage = () => {\n  _s();\n  const {\n    state,\n    fetchTransactions,\n    handleInputChange,\n    handleSubmit,\n    fetchUserAccounts\n  } = useContext(TransactionContext);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      console.log(\"Fetching user accounts for user ID:\", user.id); // Debug log\n      fetchUserAccounts(user.id);\n    }\n  }, [fetchUserAccounts]);\n  const handleShow = () => setShowModal(true);\n  const handleClose = () => setShowModal(false);\n  const handleAccountChange = event => {\n    const accountId = event.target.value;\n    console.log(\"Selected account ID:\", accountId); // Debug log\n    if (accountId) {\n      fetchTransactions(accountId);\n      const selectedAccount = state.accounts.find(account => account.accountId === parseInt(accountId));\n      if (selectedAccount) {\n        state.selectedAccount = selectedAccount;\n      }\n    }\n  };\n  useEffect(() => {\n    console.log(\"State updated:\", state); // Debug log\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginTop: \"80px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transaction Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"accountSelect\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Select Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        onChange: handleAccountChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), state.accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: account.accountId,\n          children: account.accountName\n        }, account.accountId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), state.selectedAccount && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: state.selectedAccount.accountName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), state.selectedAccount.balance && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Balance: \", state.selectedAccount.balance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), state.selectedAccount.apr && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"APR: \", state.selectedAccount.apr]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), state.selectedAccount.type && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Type: \", state.selectedAccount.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), state.selectedAccount.creditLimit && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Credit Limit: \", state.selectedAccount.creditLimit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: state.transactions.length > 0 ? /*#__PURE__*/_jsxDEV(TransactionList, {\n          transactions: state.transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No transactions found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Add New Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      show: showModal,\n      handleClose: handleClose,\n      handleSubmit: handleSubmit,\n      handleInputChange: handleInputChange,\n      newTransaction: state.newTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionPage, \"khQmcRXnuISMvDdxF01WrvNc2vY=\");\n_c = TransactionPage;\nexport default TransactionPage;\nvar _c;\n$RefreshReg$(_c, \"TransactionPage\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Container","Row","Button","Form","Card","TransactionContext","TransactionList","AddTransactionForm","jsxDEV","_jsxDEV","Fragment","_Fragment","TransactionPage","_s","state","fetchTransactions","handleInputChange","handleSubmit","fetchUserAccounts","showModal","setShowModal","userString","localStorage","getItem","user","JSON","parse","console","log","id","handleShow","handleClose","handleAccountChange","event","accountId","target","value","selectedAccount","accounts","find","account","parseInt","style","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","as","onChange","map","accountName","className","Body","balance","apr","type","creditLimit","transactions","length","variant","onClick","show","newTransaction","_c","$RefreshReg$"],"sources":["/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-page.js"],"sourcesContent":["// src/components/TransactionComponent/transaction-page.js\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Container, Row, Button, Form, Card } from \"react-bootstrap\";\nimport { TransactionContext } from \"./transaction-context\";\nimport TransactionList from \"./transaction-list\";\nimport AddTransactionForm from \"./add-transaction-form\";\n\nconst TransactionPage = () => {\n  const {\n    state,\n    fetchTransactions,\n    handleInputChange,\n    handleSubmit,\n    fetchUserAccounts,\n  } = useContext(TransactionContext);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      console.log(\"Fetching user accounts for user ID:\", user.id); // Debug log\n      fetchUserAccounts(user.id);\n    }\n  }, [fetchUserAccounts]);\n\n  const handleShow = () => setShowModal(true);\n  const handleClose = () => setShowModal(false);\n\n  const handleAccountChange = (event) => {\n    const accountId = event.target.value;\n    console.log(\"Selected account ID:\", accountId); // Debug log\n    if (accountId) {\n      fetchTransactions(accountId);\n      const selectedAccount = state.accounts.find(\n        (account) => account.accountId === parseInt(accountId)\n      );\n      if (selectedAccount) {\n        state.selectedAccount = selectedAccount;\n      }\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"State updated:\", state); // Debug log\n  }, [state]);\n\n  return (\n    <Container style={{ marginTop: \"80px\" }}>\n      <h1>Transaction Management</h1>\n      <Form.Group controlId=\"accountSelect\">\n        <Form.Label>Select Account</Form.Label>\n        <Form.Control as=\"select\" onChange={handleAccountChange}>\n          <option value=\"\">Select an account</option>\n          {state.accounts.map((account) => (\n            <option key={account.accountId} value={account.accountId}>\n              {account.accountName}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      {state.selectedAccount && (\n        <>\n          <h2>Account Details</h2>\n          <Card className=\"mb-4\">\n            <Card.Body>\n              <p>\n                <strong>{state.selectedAccount.accountName}</strong>\n              </p>\n              {state.selectedAccount.balance && (\n                <p>Balance: {state.selectedAccount.balance}</p>\n              )}\n              {state.selectedAccount.apr && (\n                <p>APR: {state.selectedAccount.apr}</p>\n              )}\n              {state.selectedAccount.type && (\n                <p>Type: {state.selectedAccount.type}</p>\n              )}\n              {state.selectedAccount.creditLimit && (\n                <p>Credit Limit: {state.selectedAccount.creditLimit}</p>\n              )}\n            </Card.Body>\n          </Card>\n          <h3>Transactions</h3>\n          <Row>\n            {state.transactions.length > 0 ? (\n              <TransactionList transactions={state.transactions} />\n            ) : (\n              <p>No transactions found.</p>\n            )}\n          </Row>\n        </>\n      )}\n      <Button variant=\"primary\" onClick={handleShow}>\n        Add New Transaction\n      </Button>\n      <AddTransactionForm\n        show={showModal}\n        handleClose={handleClose}\n        handleSubmit={handleSubmit}\n        handleInputChange={handleInputChange}\n        newTransaction={state.newTransaction}\n      />\n    </Container>\n  );\n};\n\nexport default TransactionPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}