{"ast":null,"code":"var _jsxFileName = \"/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-page.js\",\n  _s = $RefreshSig$();\n// src/components/TransactionComponent/transaction-page.js\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Container, Row, Button, Form, Card } from \"react-bootstrap\";\nimport { TransactionContext } from \"./transaction-context\";\nimport TransactionList from \"./transaction-list\";\nimport AddTransactionForm from \"./add-transaction-form\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TransactionPage = () => {\n  _s();\n  const {\n    state,\n    fetchTransactions,\n    handleInputChange,\n    handleSubmit,\n    fetchUserAccounts,\n    dispatch\n  } = useContext(TransactionContext);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      console.log(\"Fetching user accounts for user ID:\", user.id); // Debug log\n      fetchUserAccounts(user.id);\n    }\n  }, [fetchUserAccounts]);\n  const handleShow = () => setShowModal(true);\n  const handleClose = () => setShowModal(false);\n  const handleAccountChange = event => {\n    const accountId = event.target.value;\n    console.log(\"Selected account ID:\", accountId); // Debug log\n    if (accountId) {\n      fetchTransactions(accountId);\n      const selectedAccount = state.accounts.find(account => account.accountId === parseInt(accountId));\n      if (selectedAccount) {\n        dispatch({\n          type: \"SET_SELECTED_ACCOUNT\",\n          payload: selectedAccount\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    console.log(\"State updated:\", state); // Debug log\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginTop: \"80px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transaction Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"accountSelect\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Select Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        onChange: handleAccountChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), Array.isArray(state.accounts) && state.accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: account.accountId,\n          children: account.accountName\n        }, account.accountId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), state.selectedAccount && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: state.selectedAccount.accountName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [state.selectedAccount.balance && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Balance: \", state.selectedAccount.balance]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), state.selectedAccount.apr && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"APR: \", state.selectedAccount.apr]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), state.selectedAccount.type && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Type: \", state.selectedAccount.type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), state.selectedAccount.creditLimit && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Credit Limit: \", state.selectedAccount.creditLimit]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TransactionList, {\n        transactions: state.transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Add New Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      show: showModal,\n      handleClose: handleClose,\n      handleSubmit: handleSubmit,\n      handleInputChange: handleInputChange,\n      newTransaction: state.newTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionPage, \"HzC/Iax06DY70DBR9ra4/f0fW1k=\");\n_c = TransactionPage;\nexport default TransactionPage;\nvar _c;\n$RefreshReg$(_c, \"TransactionPage\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Container","Row","Button","Form","Card","TransactionContext","TransactionList","AddTransactionForm","jsxDEV","_jsxDEV","Fragment","_Fragment","TransactionPage","_s","state","fetchTransactions","handleInputChange","handleSubmit","fetchUserAccounts","dispatch","showModal","setShowModal","userString","localStorage","getItem","user","JSON","parse","console","log","id","handleShow","handleClose","handleAccountChange","event","accountId","target","value","selectedAccount","accounts","find","account","parseInt","type","payload","style","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","as","onChange","Array","isArray","map","accountName","className","Body","Title","Text","balance","apr","creditLimit","transactions","variant","onClick","show","newTransaction","_c","$RefreshReg$"],"sources":["/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-page.js"],"sourcesContent":["// src/components/TransactionComponent/transaction-page.js\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Container, Row, Button, Form, Card } from \"react-bootstrap\";\nimport { TransactionContext } from \"./transaction-context\";\nimport TransactionList from \"./transaction-list\";\nimport AddTransactionForm from \"./add-transaction-form\";\n\nconst TransactionPage = () => {\n  const {\n    state,\n    fetchTransactions,\n    handleInputChange,\n    handleSubmit,\n    fetchUserAccounts,\n    dispatch,\n  } = useContext(TransactionContext);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      console.log(\"Fetching user accounts for user ID:\", user.id); // Debug log\n      fetchUserAccounts(user.id);\n    }\n  }, [fetchUserAccounts]);\n\n  const handleShow = () => setShowModal(true);\n  const handleClose = () => setShowModal(false);\n\n  const handleAccountChange = (event) => {\n    const accountId = event.target.value;\n    console.log(\"Selected account ID:\", accountId); // Debug log\n    if (accountId) {\n      fetchTransactions(accountId);\n      const selectedAccount = state.accounts.find(\n        (account) => account.accountId === parseInt(accountId)\n      );\n      if (selectedAccount) {\n        dispatch({ type: \"SET_SELECTED_ACCOUNT\", payload: selectedAccount });\n      }\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"State updated:\", state); // Debug log\n  }, [state]);\n\n  return (\n    <Container style={{ marginTop: \"80px\" }}>\n      <h1>Transaction Management</h1>\n      <Form.Group controlId=\"accountSelect\">\n        <Form.Label>Select Account</Form.Label>\n        <Form.Control as=\"select\" onChange={handleAccountChange}>\n          <option value=\"\">Select an account</option>\n          {Array.isArray(state.accounts) &&\n            state.accounts.map((account) => (\n              <option key={account.accountId} value={account.accountId}>\n                {account.accountName}\n              </option>\n            ))}\n        </Form.Control>\n      </Form.Group>\n      {state.selectedAccount && (\n        <>\n          <h2>Account Details</h2>\n          <Card className=\"mb-4\">\n            <Card.Body>\n              <Card.Title>{state.selectedAccount.accountName}</Card.Title>\n              <Card.Text>\n                {state.selectedAccount.balance && (\n                  <p>Balance: {state.selectedAccount.balance}</p>\n                )}\n                {state.selectedAccount.apr && (\n                  <p>APR: {state.selectedAccount.apr}</p>\n                )}\n                {state.selectedAccount.type && (\n                  <p>Type: {state.selectedAccount.type}</p>\n                )}\n                {state.selectedAccount.creditLimit && (\n                  <p>Credit Limit: {state.selectedAccount.creditLimit}</p>\n                )}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          <h3>Transactions</h3>\n          <TransactionList transactions={state.transactions} />\n        </>\n      )}\n      <Button variant=\"primary\" onClick={handleShow}>\n        Add New Transaction\n      </Button>\n      <AddTransactionForm\n        show={showModal}\n        handleClose={handleClose}\n        handleSubmit={handleSubmit}\n        handleInputChange={handleInputChange}\n        newTransaction={state.newTransaction}\n      />\n    </Container>\n  );\n};\n\nexport default TransactionPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}