{"ast":null,"code":"var _jsxFileName = \"/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from \"react\";\nimport { fetchUserAccountsApi, addTransactionApi, deleteTransactionApi, fetchTransactionsApi } from \"./transaction-api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionContext = /*#__PURE__*/createContext();\nexport const TransactionProvider = ({\n  children\n}) => {\n  _s();\n  const [state, setState] = useState({\n    accounts: [],\n    selectedAccountId: \"\",\n    transactions: [],\n    newTransaction: {\n      transactionDate: \"\",\n      amount: \"\",\n      description: \"\",\n      recurring: \"\",\n      recurringFrequency: \"\",\n      transactionType: \"\",\n      relatedTransactionId: \"\"\n    }\n  });\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setState(prevState => ({\n      ...prevState,\n      newTransaction: {\n        ...prevState.newTransaction,\n        [name]: value\n      }\n    }));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const {\n      selectedAccountId,\n      newTransaction\n    } = state;\n    addTransactionApi(selectedAccountId, newTransaction).then(response => {\n      console.log(\"Transaction added:\", response.data); // Debug log\n      setState(prevState => ({\n        ...prevState,\n        transactions: [...prevState.transactions, response.data],\n        newTransaction: {\n          transactionDate: \"\",\n          amount: \"\",\n          description: \"\",\n          recurring: \"\",\n          recurringFrequency: \"\",\n          transactionType: \"\",\n          relatedTransactionId: \"\"\n        }\n      }));\n    }).catch(error => {\n      console.error(\"There was an error creating the transaction.\", error);\n    });\n  };\n  const fetchTransactions = useCallback(accountId => {\n    console.log(\"Fetching transactions for account ID:\", accountId); // Debug log\n    fetchTransactionsApi(accountId).then(response => {\n      console.log(\"Transactions fetched:\", response.data); // Debug log\n      setState(prevState => ({\n        ...prevState,\n        transactions: response.data\n      }));\n    }).catch(error => console.error(\"There was an error fetching the transactions.\", error));\n  }, []);\n  const fetchUserAccounts = useCallback(userId => {\n    console.log(\"Fetching accounts for user ID:\", userId); // Debug log\n    fetchUserAccountsApi(userId).then(response => {\n      console.log(\"Accounts fetched:\", response.data); // Debug log\n      setState(prevState => ({\n        ...prevState,\n        accounts: response.data\n      }));\n    }).catch(error => console.error(\"There was an error fetching the accounts.\", error));\n  }, []);\n  const handleAccountChange = event => {\n    const selectedAccountId = event.target.value;\n    setState(prevState => ({\n      ...prevState,\n      selectedAccountId\n    }));\n    fetchTransactions(selectedAccountId);\n  };\n  const deleteTransaction = transactionId => {\n    deleteTransactionApi(transactionId).then(response => {\n      if (response.data) {\n        console.log(`Transaction with ID ${transactionId} deleted.`); // Debug log\n        setState(prevState => ({\n          ...prevState,\n          transactions: prevState.transactions.filter(transaction => transaction.transactionId !== transactionId)\n        }));\n      }\n    }).catch(error => {\n      console.error(\"There was an error deleting the transaction.\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n    value: {\n      state,\n      fetchUserAccounts,\n      deleteTransaction,\n      handleSubmit,\n      handleInputChange,\n      handleAccountChange\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionProvider, \"IsqcQCavXbxQyC0ms3en618C6CQ=\");\n_c = TransactionProvider;\nexport const useTransactionContext = () => {\n  _s2();\n  return useContext(TransactionContext);\n};\n_s2(useTransactionContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","fetchUserAccountsApi","addTransactionApi","deleteTransactionApi","fetchTransactionsApi","jsxDEV","_jsxDEV","TransactionContext","TransactionProvider","children","_s","state","setState","accounts","selectedAccountId","transactions","newTransaction","transactionDate","amount","description","recurring","recurringFrequency","transactionType","relatedTransactionId","handleInputChange","event","name","value","target","prevState","handleSubmit","preventDefault","then","response","console","log","data","catch","error","fetchTransactions","accountId","fetchUserAccounts","userId","handleAccountChange","deleteTransaction","transactionId","filter","transaction","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTransactionContext","_s2","$RefreshReg$"],"sources":["/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-context.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from \"react\";\nimport {\n  fetchUserAccountsApi,\n  addTransactionApi,\n  deleteTransactionApi,\n  fetchTransactionsApi,\n} from \"./transaction-api\";\n\nexport const TransactionContext = createContext();\n\nexport const TransactionProvider = ({ children }) => {\n  const [state, setState] = useState({\n    accounts: [],\n    selectedAccountId: \"\",\n    transactions: [],\n    newTransaction: {\n      transactionDate: \"\",\n      amount: \"\",\n      description: \"\",\n      recurring: \"\",\n      recurringFrequency: \"\",\n      transactionType: \"\",\n      relatedTransactionId: \"\",\n    },\n  });\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setState((prevState) => ({\n      ...prevState,\n      newTransaction: {\n        ...prevState.newTransaction,\n        [name]: value,\n      },\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const { selectedAccountId, newTransaction } = state;\n\n    addTransactionApi(selectedAccountId, newTransaction)\n      .then((response) => {\n        console.log(\"Transaction added:\", response.data); // Debug log\n        setState((prevState) => ({\n          ...prevState,\n          transactions: [...prevState.transactions, response.data],\n          newTransaction: {\n            transactionDate: \"\",\n            amount: \"\",\n            description: \"\",\n            recurring: \"\",\n            recurringFrequency: \"\",\n            transactionType: \"\",\n            relatedTransactionId: \"\",\n          },\n        }));\n      })\n      .catch((error) => {\n        console.error(\"There was an error creating the transaction.\", error);\n      });\n  };\n\n  const fetchTransactions = useCallback((accountId) => {\n    console.log(\"Fetching transactions for account ID:\", accountId); // Debug log\n    fetchTransactionsApi(accountId)\n      .then((response) => {\n        console.log(\"Transactions fetched:\", response.data); // Debug log\n        setState((prevState) => ({\n          ...prevState,\n          transactions: response.data,\n        }));\n      })\n      .catch((error) =>\n        console.error(\"There was an error fetching the transactions.\", error)\n      );\n  }, []);\n\n  const fetchUserAccounts = useCallback((userId) => {\n    console.log(\"Fetching accounts for user ID:\", userId); // Debug log\n    fetchUserAccountsApi(userId)\n      .then((response) => {\n        console.log(\"Accounts fetched:\", response.data); // Debug log\n        setState((prevState) => ({\n          ...prevState,\n          accounts: response.data,\n        }));\n      })\n      .catch((error) =>\n        console.error(\"There was an error fetching the accounts.\", error)\n      );\n  }, []);\n\n  const handleAccountChange = (event) => {\n    const selectedAccountId = event.target.value;\n    setState((prevState) => ({\n      ...prevState,\n      selectedAccountId,\n    }));\n    fetchTransactions(selectedAccountId);\n  };\n\n  const deleteTransaction = (transactionId) => {\n    deleteTransactionApi(transactionId)\n      .then((response) => {\n        if (response.data) {\n          console.log(`Transaction with ID ${transactionId} deleted.`); // Debug log\n          setState((prevState) => ({\n            ...prevState,\n            transactions: prevState.transactions.filter(\n              (transaction) => transaction.transactionId !== transactionId\n            ),\n          }));\n        }\n      })\n      .catch((error) => {\n        console.error(\"There was an error deleting the transaction.\", error);\n      });\n  };\n\n  return (\n    <TransactionContext.Provider\n      value={{\n        state,\n        fetchUserAccounts,\n        deleteTransaction,\n        handleSubmit,\n        handleInputChange,\n        handleAccountChange,\n      }}\n    >\n      {children}\n    </TransactionContext.Provider>\n  );\n};\n\nexport const useTransactionContext = () => {\n  return useContext(TransactionContext);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}