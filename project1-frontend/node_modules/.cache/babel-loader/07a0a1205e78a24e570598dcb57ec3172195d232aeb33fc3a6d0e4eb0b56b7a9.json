{"ast":null,"code":"const API_BASE_URL = \"http://localhost:8080\";\nexport const registerUser = async userData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      const errorText = await response.text(); // Parse the response text\n      throw new Error(errorText || \"Registration failed\");\n    }\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const loginUser = async userData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/users/login`, {\n      method: \"POST\",\n      mode: 'no-cors',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      const errorText = await response.text(); // Parse the response text\n      throw new Error(errorText || \"Login failed\");\n    }\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","registerUser","userData","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","result","json","error","loginUser","mode"],"sources":["/Users/utkarshgerrard/Desktop/Java_Projects/Group-1/project1-frontend/src/api/api.js"],"sourcesContent":["const API_BASE_URL = \"http://localhost:8080\";\n\nexport const registerUser = async (userData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text(); // Parse the response text\n      throw new Error(errorText || \"Registration failed\");\n    }\n\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const loginUser = async (userData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/users/login`, {\n      method: \"POST\",\n      mode: 'no-cors',\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text(); // Parse the response text\n      throw new Error(errorText || \"Login failed\");\n    }\n\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,QAAQ,EAAE;MACpDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;MACzC,MAAM,IAAIC,KAAK,CAACF,SAAS,IAAI,qBAAqB,CAAC;IACrD;IAEA,MAAMG,MAAM,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOf,QAAQ,IAAK;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,cAAc,EAAE;MAC1DK,MAAM,EAAE,MAAM;MACda,IAAI,EAAE,SAAS;MACfZ,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;MACzC,MAAM,IAAIC,KAAK,CAACF,SAAS,IAAI,cAAc,CAAC;IAC9C;IAEA,MAAMG,MAAM,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}