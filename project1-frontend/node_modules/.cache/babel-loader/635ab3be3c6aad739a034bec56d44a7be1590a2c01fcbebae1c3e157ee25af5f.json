{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshgerrard/Desktop/Java_Projects/Group-1/project1-frontend/src/components/AccountComponent/account-context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getUserAccounts, addAccount, deleteAccount } from './account-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountContext = /*#__PURE__*/createContext();\nexport const useAccountContext = () => {\n  _s();\n  return useContext(AccountContext);\n};\n_s(useAccountContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AccountProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, setState] = useState({\n    accounts: [],\n    newAccount: {\n      accountName: '',\n      balance: '',\n      accountType: 'CREDIT',\n      creditLimit: '',\n      apr: '',\n      principal: '',\n      loanDisbursementDate: '',\n      loanRepaymentDate: '',\n      minMonthlyPayment: ''\n    }\n  });\n  useEffect(() => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      const userId = user.id;\n      getUserAccounts(userId).then(response => {\n        setState(prevState => ({\n          ...prevState,\n          accounts: response.data\n        }));\n      }).catch(error => console.error('There was an error fetching the accounts.', error));\n    }\n  }, []);\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setState(prevState => ({\n      ...prevState,\n      newAccount: {\n        ...prevState.newAccount,\n        [name]: value\n      }\n    }));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      const userId = user.id;\n      addAccount(userId, state.newAccount).then(response => {\n        setState(prevState => ({\n          ...prevState,\n          accounts: [...prevState.accounts, response.data],\n          newAccount: {\n            accountName: '',\n            balance: '',\n            accountType: 'CREDIT',\n            creditLimit: '',\n            apr: '',\n            principal: '',\n            loanDisbursementDate: '',\n            loanRepaymentDate: '',\n            minMonthlyPayment: ''\n          }\n        }));\n      }).catch(error => {\n        console.error('There was an error creating the account.', error);\n      });\n    }\n  };\n  const handleCloseAccount = accountId => {\n    deleteAccount(accountId).then(response => {\n      if (response.data) {\n        setState(prevState => ({\n          ...prevState,\n          accounts: prevState.accounts.filter(account => account.accountId !== accountId)\n        }));\n        console.log(`Account with ID ${accountId} deleted.`);\n      }\n    }).catch(error => {\n      console.error('There was an error deleting the account.', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AccountContext.Provider, {\n    value: {\n      state,\n      handleInputChange,\n      handleSubmit,\n      handleCloseAccount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s2(AccountProvider, \"LByVRw6BGQMCqSARsKzuqNdWSCc=\");\n_c = AccountProvider;\nvar _c;\n$RefreshReg$(_c, \"AccountProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","getUserAccounts","addAccount","deleteAccount","jsxDEV","_jsxDEV","AccountContext","useAccountContext","_s","AccountProvider","children","_s2","state","setState","accounts","newAccount","accountName","balance","accountType","creditLimit","apr","principal","loanDisbursementDate","loanRepaymentDate","minMonthlyPayment","userString","localStorage","getItem","user","JSON","parse","userId","id","then","response","prevState","data","catch","error","console","handleInputChange","event","name","value","target","handleSubmit","preventDefault","handleCloseAccount","accountId","filter","account","log","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/utkarshgerrard/Desktop/Java_Projects/Group-1/project1-frontend/src/components/AccountComponent/account-context.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getUserAccounts, addAccount, deleteAccount } from './account-api';\n\nconst AccountContext = createContext();\n\nexport const useAccountContext = () => useContext(AccountContext);\n\nexport const AccountProvider = ({ children }) => {\n  const [state, setState] = useState({\n    accounts: [],\n    newAccount: {\n      accountName: '',\n      balance: '',\n      accountType: 'CREDIT',\n      creditLimit: '',\n      apr: '',\n      principal: '',\n      loanDisbursementDate: '',\n      loanRepaymentDate: '',\n      minMonthlyPayment: ''\n    }\n  });\n\n  useEffect(() => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      const userId = user.id;\n\n      getUserAccounts(userId)\n        .then(response => {\n          setState(prevState => ({\n            ...prevState,\n            accounts: response.data\n          }));\n        })\n        .catch(error => console.error('There was an error fetching the accounts.', error));\n    }\n  }, []);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setState(prevState => ({\n      ...prevState,\n      newAccount: {\n        ...prevState.newAccount,\n        [name]: value\n      }\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      const userId = user.id;\n\n      addAccount(userId, state.newAccount)\n        .then(response => {\n          setState(prevState => ({\n            ...prevState,\n            accounts: [...prevState.accounts, response.data],\n            newAccount: {\n              accountName: '',\n              balance: '',\n              accountType: 'CREDIT',\n              creditLimit: '',\n              apr: '',\n              principal: '',\n              loanDisbursementDate: '',\n              loanRepaymentDate: '',\n              minMonthlyPayment: ''\n            }\n          }));\n        })\n        .catch(error => {\n          console.error('There was an error creating the account.', error);\n        });\n    }\n  };\n\n  const handleCloseAccount = (accountId) => {\n    deleteAccount(accountId)\n      .then(response => {\n        if (response.data) {\n          setState(prevState => ({\n            ...prevState,\n            accounts: prevState.accounts.filter(account => account.accountId !== accountId)\n          }));\n          console.log(`Account with ID ${accountId} deleted.`);\n        }\n      })\n      .catch(error => {\n        console.error('There was an error deleting the account.', error);\n      });\n  };\n\n  return (\n    <AccountContext.Provider value={{ state, handleInputChange, handleSubmit, handleCloseAccount }}>\n      {children}\n    </AccountContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}