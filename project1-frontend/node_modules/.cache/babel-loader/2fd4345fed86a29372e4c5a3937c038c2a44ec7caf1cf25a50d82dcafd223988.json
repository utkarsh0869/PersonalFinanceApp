{"ast":null,"code":"var _jsxFileName = \"/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"http://localhost:8080\";\nexport const TransactionContext = /*#__PURE__*/createContext();\nexport const TransactionProvider = ({\n  children\n}) => {\n  _s();\n  const [state, setState] = useState({\n    accounts: [],\n    selectedAccount: null,\n    transactions: [],\n    newTransaction: {\n      transactionDate: \"\",\n      amount: \"\",\n      description: \"\",\n      recurring: \"\",\n      recurringFrequency: \"\",\n      transactionType: \"\",\n      relatedTransactionId: \"\"\n    }\n  });\n  const fetchUserAccounts = useCallback(async userId => {\n    try {\n      console.log(`Fetching accounts for user ID: ${userId}`);\n      const response = await axios.get(`${API_BASE_URL}/users/${userId}/accounts`);\n      console.log(\"Accounts fetched:\", response.data);\n      setState(prevState => ({\n        ...prevState,\n        accounts: response.data\n      }));\n    } catch (error) {\n      console.error(\"There was an error fetching the accounts:\", error);\n    }\n  }, []);\n  const fetchAccountDetails = useCallback(async accountId => {\n    try {\n      console.log(`Fetching account details for account ID: ${accountId}`);\n      const response = await axios.get(`${API_BASE_URL}/accounts/${accountId}`);\n      console.log(\"Account details fetched:\", response.data);\n      setState(prevState => ({\n        ...prevState,\n        selectedAccount: response.data\n      }));\n    } catch (error) {\n      console.error(\"There was an error fetching the account details:\", error);\n    }\n  }, []);\n  const fetchTransactions = useCallback(async accountId => {\n    try {\n      console.log(`Fetching transactions for account ID: ${accountId}`);\n      const response = await axios.get(`${API_BASE_URL}/transactions/account/${accountId}`);\n      console.log(\"Transactions fetched:\", response.data);\n      setState(prevState => ({\n        ...prevState,\n        transactions: response.data\n      }));\n    } catch (error) {\n      console.error(\"There was an error fetching the transactions:\", error);\n    }\n  }, []);\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setState(prevState => ({\n      ...prevState,\n      newTransaction: {\n        ...prevState.newTransaction,\n        [name]: value\n      }\n    }));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const accountString = localStorage.getItem(\"account\");\n    if (accountString) {\n      const account = JSON.parse(accountString);\n      var accountId = account.id;\n    }\n    try {\n      const response = await axios.post(`${API_BASE_URL}/transactions/${accountId}`, state.newTransaction);\n      setState(prevState => ({\n        ...prevState,\n        transactions: [...prevState.transactions, response.data],\n        newTransaction: {\n          transactionDate: \"\",\n          amount: \"\",\n          description: \"\",\n          recurring: \"\",\n          recurringFrequency: \"\",\n          transactionType: \"\",\n          relatedTransactionId: \"\"\n        }\n      }));\n      console.log(\"Transaction added:\", response.data);\n    } catch (error) {\n      console.error(\"There was an error creating the transaction:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n    value: {\n      state,\n      fetchUserAccounts,\n      fetchAccountDetails,\n      fetchTransactions,\n      handleSubmit,\n      handleInputChange\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionProvider, \"CpsmU4yOSNep5eJCGE0rMc9vZC0=\");\n_c = TransactionProvider;\nexport const useTransactionContext = () => {\n  _s2();\n  return useContext(TransactionContext);\n};\n_s2(useTransactionContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","axios","jsxDEV","_jsxDEV","API_BASE_URL","TransactionContext","TransactionProvider","children","_s","state","setState","accounts","selectedAccount","transactions","newTransaction","transactionDate","amount","description","recurring","recurringFrequency","transactionType","relatedTransactionId","fetchUserAccounts","userId","console","log","response","get","data","prevState","error","fetchAccountDetails","accountId","fetchTransactions","handleInputChange","event","name","value","target","handleSubmit","preventDefault","accountString","localStorage","getItem","account","JSON","parse","id","post","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTransactionContext","_s2","$RefreshReg$"],"sources":["/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-context.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from \"react\";\nimport axios from \"axios\";\n\nconst API_BASE_URL = \"http://localhost:8080\";\n\nexport const TransactionContext = createContext();\n\nexport const TransactionProvider = ({ children }) => {\n  const [state, setState] = useState({\n    accounts: [],\n    selectedAccount: null,\n    transactions: [],\n    newTransaction: {\n      transactionDate: \"\",\n      amount: \"\",\n      description: \"\",\n      recurring: \"\",\n      recurringFrequency: \"\",\n      transactionType: \"\",\n      relatedTransactionId: \"\",\n    },\n  });\n\n  const fetchUserAccounts = useCallback(async (userId) => {\n    try {\n      console.log(`Fetching accounts for user ID: ${userId}`);\n      const response = await axios.get(\n        `${API_BASE_URL}/users/${userId}/accounts`\n      );\n      console.log(\"Accounts fetched:\", response.data);\n      setState((prevState) => ({\n        ...prevState,\n        accounts: response.data,\n      }));\n    } catch (error) {\n      console.error(\"There was an error fetching the accounts:\", error);\n    }\n  }, []);\n\n  const fetchAccountDetails = useCallback(async (accountId) => {\n    try {\n      console.log(`Fetching account details for account ID: ${accountId}`);\n      const response = await axios.get(`${API_BASE_URL}/accounts/${accountId}`);\n      console.log(\"Account details fetched:\", response.data);\n      setState((prevState) => ({\n        ...prevState,\n        selectedAccount: response.data,\n      }));\n    } catch (error) {\n      console.error(\"There was an error fetching the account details:\", error);\n    }\n  }, []);\n\n  const fetchTransactions = useCallback(async (accountId) => {\n    try {\n      console.log(`Fetching transactions for account ID: ${accountId}`);\n      const response = await axios.get(\n        `${API_BASE_URL}/transactions/account/${accountId}`\n      );\n      console.log(\"Transactions fetched:\", response.data);\n      setState((prevState) => ({\n        ...prevState,\n        transactions: response.data,\n      }));\n    } catch (error) {\n      console.error(\"There was an error fetching the transactions:\", error);\n    }\n  }, []);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setState((prevState) => ({\n      ...prevState,\n      newTransaction: {\n        ...prevState.newTransaction,\n        [name]: value,\n      },\n    }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const accountString = localStorage.getItem(\"account\");\n    if (accountString) {\n      const account = JSON.parse(accountString);\n      var accountId = account.id;\n    }\n\n    try {\n      const response = await axios.post(\n        `${API_BASE_URL}/transactions/${accountId}`,\n        state.newTransaction\n      );\n      setState((prevState) => ({\n        ...prevState,\n        transactions: [...prevState.transactions, response.data],\n        newTransaction: {\n          transactionDate: \"\",\n          amount: \"\",\n          description: \"\",\n          recurring: \"\",\n          recurringFrequency: \"\",\n          transactionType: \"\",\n          relatedTransactionId: \"\",\n        },\n      }));\n      console.log(\"Transaction added:\", response.data);\n    } catch (error) {\n      console.error(\"There was an error creating the transaction:\", error);\n    }\n  };\n\n  return (\n    <TransactionContext.Provider\n      value={{\n        state,\n        fetchUserAccounts,\n        fetchAccountDetails,\n        fetchTransactions,\n        handleSubmit,\n        handleInputChange,\n      }}\n    >\n      {children}\n    </TransactionContext.Provider>\n  );\n};\n\nexport const useTransactionContext = () => {\n  return useContext(TransactionContext);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}