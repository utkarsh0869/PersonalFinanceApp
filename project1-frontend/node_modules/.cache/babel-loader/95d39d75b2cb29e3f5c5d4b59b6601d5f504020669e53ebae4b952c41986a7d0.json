{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshgerrard/Desktop/Java_Projects/Group-1/project1-frontend/src/components/AccountComponent/account-list.js\",\n  _s = $RefreshSig$();\n// AccountPage.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { Button, Card, Container, Row, Col } from 'react-bootstrap';\nimport UpdateAccountModal from './update-account-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"http://localhost:8080\";\nconst AccountList = () => {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const {\n    state\n  } = useContext(AccountContext);\n  useEffect(() => {\n    fetchAccounts();\n  }, []);\n  const fetchAccounts = () => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      var userId = user.id;\n      axios.get(`${API_BASE_URL}/users/${userId}/accounts`).then(response => {\n        setAccounts(response.data);\n      }).catch(error => {\n        console.error('Error fetching accounts:', error);\n      });\n    }\n  };\n  const handleUpdateAccount = updatedAccount => {\n    const updatedAccounts = accounts.map(account => account.accountId === updatedAccount.accountId ? updatedAccount : account);\n    setAccounts(updatedAccounts);\n  };\n  const handleEditAccount = account => {\n    setSelectedAccount(account);\n    setShowUpdateModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowUpdateModal(false);\n    setSelectedAccount(null);\n  };\n  const handleDeleteAccount = accountId => {\n    axios.delete(`${API_BASE_URL}/accounts/delete/${accountId}`).then(response => {\n      setAccounts(prevAccounts => prevAccounts.filter(account => account.accountId !== accountId));\n      console.log(`Account with ID ${accountId} deleted.`);\n    }).catch(error => {\n      console.error('Error deleting account:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Account List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: accounts.map(account => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: account.accountName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: [\"Balance: $\", account.balance]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Type: \", account.accountType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Credit Limit: $\", account.creditLimit]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                onClick: () => handleDeleteAccount(account.accountId),\n                children: \"Close Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => handleEditAccount(account),\n                children: \"Edit Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, account.accountId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), selectedAccount && /*#__PURE__*/_jsxDEV(UpdateAccountModal, {\n      account: selectedAccount,\n      show: showUpdateModal,\n      onHide: handleCloseModal,\n      onUpdate: handleUpdateAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountList, \"UgxH2wbVXPC5Ya6KDT73rmEDyPM=\");\n_c = AccountList;\nexport default AccountList;\nvar _c;\n$RefreshReg$(_c, \"AccountList\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","Button","Card","Container","Row","Col","UpdateAccountModal","jsxDEV","_jsxDEV","API_BASE_URL","AccountList","_s","accounts","setAccounts","showUpdateModal","setShowUpdateModal","selectedAccount","setSelectedAccount","state","AccountContext","fetchAccounts","userString","localStorage","getItem","user","JSON","parse","userId","id","get","then","response","data","catch","error","console","handleUpdateAccount","updatedAccount","updatedAccounts","map","account","accountId","handleEditAccount","handleCloseModal","handleDeleteAccount","delete","prevAccounts","filter","log","children","fileName","_jsxFileName","lineNumber","columnNumber","xs","sm","md","lg","className","Body","Title","accountName","style","fontWeight","balance","accountType","creditLimit","display","justifyContent","variant","onClick","show","onHide","onUpdate","_c","$RefreshReg$"],"sources":["/Users/utkarshgerrard/Desktop/Java_Projects/Group-1/project1-frontend/src/components/AccountComponent/account-list.js"],"sourcesContent":["// AccountPage.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { Button, Card, Container, Row, Col } from 'react-bootstrap';\nimport UpdateAccountModal from './update-account-modal';\n\nconst API_BASE_URL = \"http://localhost:8080\";\n\nconst AccountList = () => {\n  const [accounts, setAccounts] = useState([]);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [selectedAccount, setSelectedAccount] = useState(null);\n\n  const { state } = useContext(AccountContext)\n\n  useEffect(() => {\n    fetchAccounts();\n  }, []);\n\n  const fetchAccounts = () => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      var userId = user.id;\n      axios.get(`${API_BASE_URL}/users/${userId}/accounts`)\n        .then(response => {\n          setAccounts(response.data);\n        })\n        .catch(error => {\n          console.error('Error fetching accounts:', error);\n        });\n    }\n  };\n\n  const handleUpdateAccount = (updatedAccount) => {\n    const updatedAccounts = accounts.map(account =>\n      account.accountId === updatedAccount.accountId ? updatedAccount : account\n    );\n    setAccounts(updatedAccounts);\n  };\n\n  const handleEditAccount = (account) => {\n    setSelectedAccount(account);\n    setShowUpdateModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowUpdateModal(false);\n    setSelectedAccount(null);\n  };\n\n  const handleDeleteAccount = (accountId) => {\n    axios.delete(`${API_BASE_URL}/accounts/delete/${accountId}`)\n      .then(response => {\n        setAccounts(prevAccounts => prevAccounts.filter(account => account.accountId !== accountId));\n        console.log(`Account with ID ${accountId} deleted.`);\n      })\n      .catch(error => {\n        console.error('Error deleting account:', error);\n      });\n  };\n\n  return (\n    <Container>\n      <h1>Account List</h1>\n      <Row>\n        {accounts.map(account => (\n          <Col key={account.accountId} xs={12} sm={6} md={4} lg={3} className=\"mb-4\">\n            <Card>\n              <Card.Body>\n                <Card.Title>{account.accountName}</Card.Title>\n                {/* <Card.Text> */}\n                  <div style={{ fontWeight: 'bold' }}>Balance: ${account.balance}</div>\n                  <div>Type: {account.accountType}</div>\n                  <div>Credit Limit: ${account.creditLimit}</div>\n                {/* </Card.Text> */}\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Button variant=\"danger\" onClick={() => handleDeleteAccount(account.accountId)}>Close Account</Button>\n                  <Button variant=\"primary\" onClick={() => handleEditAccount(account)}>Edit Account</Button>\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n      {selectedAccount && (\n        <UpdateAccountModal\n          account={selectedAccount}\n          show={showUpdateModal}\n          onHide={handleCloseModal}\n          onUpdate={handleUpdateAccount}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default AccountList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}