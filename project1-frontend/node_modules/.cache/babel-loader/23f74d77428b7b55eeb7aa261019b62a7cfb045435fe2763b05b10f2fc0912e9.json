{"ast":null,"code":"var _jsxFileName = \"/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-page.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Container, Row, Form, Card } from \"react-bootstrap\";\nimport { TransactionContext } from \"./transaction-context\";\nimport TransactionList from \"./transaction-list\";\nimport AddTransactionForm from \"./add-transaction-form\";\nimport \"./transaction-page.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TransactionPage() {\n  _s();\n  const {\n    state,\n    fetchTransactions,\n    fetchUserAccounts,\n    fetchAccountDetails,\n    handleInputChange,\n    handleSubmit\n  } = useContext(TransactionContext);\n  const [selectedAccountId, setSelectedAccountId] = useState(\"\");\n  useEffect(() => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      fetchUserAccounts(user.id);\n    }\n  }, [fetchUserAccounts]);\n  const handleAccountChange = event => {\n    const {\n      value\n    } = event.target;\n    setSelectedAccountId(value);\n    fetchTransactions(value);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transaction List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"selectAccount\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Select Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        onChange: handleAccountChange,\n        value: selectedAccountId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), state.accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: account.accountId,\n          children: account.accountName\n        }, account.accountId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), state.selectedAccount && /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: state.selectedAccount.accountName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Balance: \", state.selectedAccount.balance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"APR: \", state.selectedAccount.apr]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Credit Limit: \", state.selectedAccount.creditLimit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Loan Disbursement Date:\", \" \", state.selectedAccount.loanDisbursementDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Loan Repayment Date: \", state.selectedAccount.loanRepaymentDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Minimum Monthly Payment:\", \" \", state.selectedAccount.minMonthlyPayment]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Principal: \", state.selectedAccount.principal]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(TransactionList, {\n        transactions: state.transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      newTransaction: state.newTransaction,\n      handleInputChange: handleInputChange,\n      handleSubmit: e => handleSubmit(e, selectedAccountId)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionPage, \"JSmjFDo7dikmWxvznBzcjk/GP24=\");\n_c = TransactionPage;\nvar _c;\n$RefreshReg$(_c, \"TransactionPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Container","Row","Form","Card","TransactionContext","TransactionList","AddTransactionForm","jsxDEV","_jsxDEV","TransactionPage","_s","state","fetchTransactions","fetchUserAccounts","fetchAccountDetails","handleInputChange","handleSubmit","selectedAccountId","setSelectedAccountId","userString","localStorage","getItem","user","JSON","parse","id","handleAccountChange","event","value","target","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","as","onChange","accounts","map","account","accountId","accountName","selectedAccount","className","Body","Title","Text","balance","apr","creditLimit","loanDisbursementDate","loanRepaymentDate","minMonthlyPayment","principal","transactions","newTransaction","e","_c","$RefreshReg$"],"sources":["/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-page.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Container, Row, Form, Card } from \"react-bootstrap\";\nimport { TransactionContext } from \"./transaction-context\";\nimport TransactionList from \"./transaction-list\";\nimport AddTransactionForm from \"./add-transaction-form\";\nimport \"./transaction-page.css\";\n\nexport default function TransactionPage() {\n  const {\n    state,\n    fetchTransactions,\n    fetchUserAccounts,\n    fetchAccountDetails,\n    handleInputChange,\n    handleSubmit,\n  } = useContext(TransactionContext);\n  const [selectedAccountId, setSelectedAccountId] = useState(\"\");\n\n  useEffect(() => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      fetchUserAccounts(user.id);\n    }\n  }, [fetchUserAccounts]);\n\n  const handleAccountChange = (event) => {\n    const { value } = event.target;\n    setSelectedAccountId(value);\n    fetchTransactions(value);\n  };\n\n  return (\n    <Container>\n      <h1>Transaction List</h1>\n      <Form.Group controlId=\"selectAccount\">\n        <Form.Label>Select Account</Form.Label>\n        <Form.Control\n          as=\"select\"\n          onChange={handleAccountChange}\n          value={selectedAccountId}\n        >\n          <option value=\"\">Select an account</option>\n          {state.accounts.map((account) => (\n            <option key={account.accountId} value={account.accountId}>\n              {account.accountName}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      {state.selectedAccount && (\n        <Card className=\"mb-4\">\n          <Card.Body>\n            <Card.Title>{state.selectedAccount.accountName}</Card.Title>\n            <Card.Text>\n              <div>Balance: {state.selectedAccount.balance}</div>\n              <div>APR: {state.selectedAccount.apr}</div>\n              <div>Credit Limit: {state.selectedAccount.creditLimit}</div>\n              <div>\n                Loan Disbursement Date:{\" \"}\n                {state.selectedAccount.loanDisbursementDate}\n              </div>\n              <div>\n                Loan Repayment Date: {state.selectedAccount.loanRepaymentDate}\n              </div>\n              <div>\n                Minimum Monthly Payment:{\" \"}\n                {state.selectedAccount.minMonthlyPayment}\n              </div>\n              <div>Principal: {state.selectedAccount.principal}</div>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      )}\n      <Row>\n        <TransactionList transactions={state.transactions} />\n      </Row>\n      <h2>Add New Transaction</h2>\n      <AddTransactionForm\n        newTransaction={state.newTransaction}\n        handleInputChange={handleInputChange}\n        handleSubmit={(e) => handleSubmit(e, selectedAccountId)}\n      />\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}