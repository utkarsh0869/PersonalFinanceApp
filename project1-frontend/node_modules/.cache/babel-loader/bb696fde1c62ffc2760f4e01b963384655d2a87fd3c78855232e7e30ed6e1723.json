{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:8080\";\nexport const fetchTransactionsApi = async accountId => {\n  const response = await axios.get(`${API_BASE_URL}/transactions/account/${accountId}`);\n  if (response.status !== 200) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.data;\n};\nexport const addTransactionApi = async (accountId, newTransaction) => {\n  const response = await axios.post(`${API_BASE_URL}/transactions/${accountId}`, newTransaction, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (response.status !== 200 && response.status !== 201) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.data;\n};\nexport const deleteTransactionApi = async transactionId => {\n  const response = await axios.delete(`${API_BASE_URL}/transactions/${transactionId}`);\n  if (response.status !== 200) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.data;\n};\nexport const fetchUserAccountsApi = async userId => {\n  const response = await axios.get(`${API_BASE_URL}/users/${userId}/accounts`);\n  if (response.status !== 200) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.data;\n};\nexport const fetchAccountDetailsApi = async accountId => {\n  const response = await axios.get(`${API_BASE_URL}/accounts/${accountId}`);\n  if (response.status !== 200) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.data;\n};","map":{"version":3,"names":["axios","API_BASE_URL","fetchTransactionsApi","accountId","response","get","status","Error","data","addTransactionApi","newTransaction","post","headers","deleteTransactionApi","transactionId","delete","fetchUserAccountsApi","userId","fetchAccountDetailsApi"],"sources":["/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL = \"http://localhost:8080\";\n\nexport const fetchTransactionsApi = async (accountId) => {\n  const response = await axios.get(\n    `${API_BASE_URL}/transactions/account/${accountId}`\n  );\n  if (response.status !== 200) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.data;\n};\n\nexport const addTransactionApi = async (accountId, newTransaction) => {\n  const response = await axios.post(\n    `${API_BASE_URL}/transactions/${accountId}`,\n    newTransaction,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  if (response.status !== 200 && response.status !== 201) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.data;\n};\n\nexport const deleteTransactionApi = async (transactionId) => {\n  const response = await axios.delete(\n    `${API_BASE_URL}/transactions/${transactionId}`\n  );\n  if (response.status !== 200) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.data;\n};\n\nexport const fetchUserAccountsApi = async (userId) => {\n  const response = await axios.get(`${API_BASE_URL}/users/${userId}/accounts`);\n  if (response.status !== 200) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.data;\n};\n\nexport const fetchAccountDetailsApi = async (accountId) => {\n  const response = await axios.get(`${API_BASE_URL}/accounts/${accountId}`);\n  if (response.status !== 200) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.data;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,SAAS,IAAK;EACvD,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC9B,GAAGJ,YAAY,yBAAyBE,SAAS,EACnD,CAAC;EACD,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IAC3B,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAOH,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAON,SAAS,EAAEO,cAAc,KAAK;EACpE,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACW,IAAI,CAC/B,GAAGV,YAAY,iBAAiBE,SAAS,EAAE,EAC3CO,cAAc,EACd;IACEE,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CACF,CAAC;EACD,IAAIR,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAIF,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IACtD,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAOH,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,OAAO,MAAMK,oBAAoB,GAAG,MAAOC,aAAa,IAAK;EAC3D,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACe,MAAM,CACjC,GAAGd,YAAY,iBAAiBa,aAAa,EAC/C,CAAC;EACD,IAAIV,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IAC3B,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAOH,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,OAAO,MAAMQ,oBAAoB,GAAG,MAAOC,MAAM,IAAK;EACpD,MAAMb,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,UAAUgB,MAAM,WAAW,CAAC;EAC5E,IAAIb,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IAC3B,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAOH,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,OAAO,MAAMU,sBAAsB,GAAG,MAAOf,SAAS,IAAK;EACzD,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,aAAaE,SAAS,EAAE,CAAC;EACzE,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IAC3B,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAOH,QAAQ,CAACI,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}