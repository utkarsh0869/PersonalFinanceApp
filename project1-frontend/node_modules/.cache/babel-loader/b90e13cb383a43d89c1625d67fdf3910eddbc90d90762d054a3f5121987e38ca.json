{"ast":null,"code":"var _jsxFileName = \"/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-page.js\",\n  _s = $RefreshSig$();\n// src/components/TransactionComponent/transaction-page.js\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\nimport { TransactionContext } from \"./transaction-context\";\nimport TransactionList from \"./transaction-list\";\nimport AddTransactionForm from \"./add-transaction-form\"; // Ensure this path is correct\nimport \"./transaction-page.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TransactionPage = () => {\n  _s();\n  const {\n    state,\n    fetchTransactions,\n    handleInputChange,\n    handleSubmit,\n    fetchUserAccounts\n  } = useContext(TransactionContext);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      fetchUserAccounts(user.id);\n    }\n  }, [fetchUserAccounts]);\n  const handleShow = () => setShowModal(true);\n  const handleClose = () => setShowModal(false);\n  const handleAccountChange = event => {\n    const accountId = event.target.value;\n    fetchTransactions(accountId);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transaction Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"accountSelect\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Select Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        onChange: handleAccountChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), state.accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: account.accountId,\n          children: account.accountName\n        }, account.accountId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), state.selectedAccount && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: state.selectedAccount.accountName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), state.selectedAccount.balance && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Balance: \", state.selectedAccount.balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), state.selectedAccount.apr && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"APR: \", state.selectedAccount.apr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 41\n      }, this), state.selectedAccount.type && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type: \", state.selectedAccount.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), state.selectedAccount.creditLimit && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Credit Limit: \", state.selectedAccount.creditLimit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: state.transactions.length > 0 ? /*#__PURE__*/_jsxDEV(TransactionList, {\n          transactions: state.transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No transactions found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Add New Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      show: showModal,\n      handleClose: handleClose,\n      handleSubmit: handleSubmit,\n      handleInputChange: handleInputChange,\n      newTransaction: state.newTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionPage, \"bBg9xFq5eQ2oUotRRX+rmU48r5k=\");\n_c = TransactionPage;\nexport default TransactionPage;\nvar _c;\n$RefreshReg$(_c, \"TransactionPage\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Container","Row","Col","Button","Form","TransactionContext","TransactionList","AddTransactionForm","jsxDEV","_jsxDEV","Fragment","_Fragment","TransactionPage","_s","state","fetchTransactions","handleInputChange","handleSubmit","fetchUserAccounts","showModal","setShowModal","userString","localStorage","getItem","user","JSON","parse","id","handleShow","handleClose","handleAccountChange","event","accountId","target","value","style","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","as","onChange","accounts","map","account","accountName","selectedAccount","balance","apr","type","creditLimit","transactions","length","variant","onClick","show","newTransaction","_c","$RefreshReg$"],"sources":["/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-page.js"],"sourcesContent":["// src/components/TransactionComponent/transaction-page.js\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\nimport { TransactionContext } from \"./transaction-context\";\nimport TransactionList from \"./transaction-list\";\nimport AddTransactionForm from \"./add-transaction-form\"; // Ensure this path is correct\nimport \"./transaction-page.css\";\n\nconst TransactionPage = () => {\n  const {\n    state,\n    fetchTransactions,\n    handleInputChange,\n    handleSubmit,\n    fetchUserAccounts,\n  } = useContext(TransactionContext);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      fetchUserAccounts(user.id);\n    }\n  }, [fetchUserAccounts]);\n\n  const handleShow = () => setShowModal(true);\n  const handleClose = () => setShowModal(false);\n\n  const handleAccountChange = (event) => {\n    const accountId = event.target.value;\n    fetchTransactions(accountId);\n  };\n\n  return (\n    <Container style={{ marginTop: \"20px\" }}>\n      <h1>Transaction Management</h1>\n      <Form.Group controlId=\"accountSelect\">\n        <Form.Label>Select Account</Form.Label>\n        <Form.Control as=\"select\" onChange={handleAccountChange}>\n          <option value=\"\">Select an account</option>\n          {state.accounts.map((account) => (\n            <option key={account.accountId} value={account.accountId}>\n              {account.accountName}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      {state.selectedAccount && (\n        <>\n          <h2>Account Details</h2>\n          <p>\n            <strong>{state.selectedAccount.accountName}</strong>\n          </p>\n          {state.selectedAccount.balance && (\n            <p>Balance: {state.selectedAccount.balance}</p>\n          )}\n          {state.selectedAccount.apr && <p>APR: {state.selectedAccount.apr}</p>}\n          {state.selectedAccount.type && (\n            <p>Type: {state.selectedAccount.type}</p>\n          )}\n          {state.selectedAccount.creditLimit && (\n            <p>Credit Limit: {state.selectedAccount.creditLimit}</p>\n          )}\n          <h3>Transactions</h3>\n          <Row>\n            {state.transactions.length > 0 ? (\n              <TransactionList transactions={state.transactions} />\n            ) : (\n              <p>No transactions found.</p>\n            )}\n          </Row>\n        </>\n      )}\n      <Button variant=\"primary\" onClick={handleShow}>\n        Add New Transaction\n      </Button>\n      <AddTransactionForm\n        show={showModal}\n        handleClose={handleClose}\n        handleSubmit={handleSubmit}\n        handleInputChange={handleInputChange}\n        newTransaction={state.newTransaction}\n      />\n    </Container>\n  );\n};\n\nexport default TransactionPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}