{"ast":null,"code":"var _jsxFileName = \"/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/components/TransactionComponent/transaction-context.js\nimport React, { createContext, useReducer, useContext } from \"react\";\nimport { fetchUserAccountsAPI, fetchTransactionsAPI } from \"../../api/transaction-api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  accounts: [],\n  transactions: [],\n  selectedAccount: null,\n  newTransaction: {\n    description: \"\",\n    transactionType: \"DEPOSIT\",\n    amount: 0,\n    transactionDate: \"\",\n    recurring: false,\n    recurringFrequency: \"\",\n    relatedTransactionId: null\n  }\n};\nconst TransactionContext = /*#__PURE__*/createContext(initialState);\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_ACCOUNTS\":\n      return {\n        ...state,\n        accounts: action.payload\n      };\n    case \"SET_TRANSACTIONS\":\n      return {\n        ...state,\n        transactions: action.payload\n      };\n    case \"SET_SELECTED_ACCOUNT\":\n      return {\n        ...state,\n        selectedAccount: action.payload\n      };\n    case \"SET_NEW_TRANSACTION\":\n      return {\n        ...state,\n        newTransaction: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const TransactionProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const fetchUserAccounts = async userId => {\n    try {\n      const accounts = await fetchUserAccountsAPI(userId);\n      dispatch({\n        type: \"SET_ACCOUNTS\",\n        payload: accounts\n      });\n    } catch (error) {\n      console.error(\"Error fetching user accounts:\", error);\n    }\n  };\n  const fetchTransactions = async accountId => {\n    try {\n      const transactions = await fetchTransactionsAPI(accountId);\n      dispatch({\n        type: \"SET_TRANSACTIONS\",\n        payload: transactions\n      });\n    } catch (error) {\n      console.error(\"Error fetching transactions:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n    value: {\n      state,\n      fetchUserAccounts,\n      fetchTransactions,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = TransactionProvider;\nexport const useTransactionContext = () => {\n  _s2();\n  return useContext(TransactionContext);\n};\n_s2(useTransactionContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useContext","fetchUserAccountsAPI","fetchTransactionsAPI","jsxDEV","_jsxDEV","initialState","accounts","transactions","selectedAccount","newTransaction","description","transactionType","amount","transactionDate","recurring","recurringFrequency","relatedTransactionId","TransactionContext","reducer","state","action","type","payload","TransactionProvider","children","_s","dispatch","fetchUserAccounts","userId","error","console","fetchTransactions","accountId","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTransactionContext","_s2","$RefreshReg$"],"sources":["/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-context.js"],"sourcesContent":["// src/components/TransactionComponent/transaction-context.js\nimport React, { createContext, useReducer, useContext } from \"react\";\nimport {\n  fetchUserAccountsAPI,\n  fetchTransactionsAPI,\n} from \"../../api/transaction-api\";\n\nconst initialState = {\n  accounts: [],\n  transactions: [],\n  selectedAccount: null,\n  newTransaction: {\n    description: \"\",\n    transactionType: \"DEPOSIT\",\n    amount: 0,\n    transactionDate: \"\",\n    recurring: false,\n    recurringFrequency: \"\",\n    relatedTransactionId: null,\n  },\n};\n\nconst TransactionContext = createContext(initialState);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_ACCOUNTS\":\n      return { ...state, accounts: action.payload };\n    case \"SET_TRANSACTIONS\":\n      return { ...state, transactions: action.payload };\n    case \"SET_SELECTED_ACCOUNT\":\n      return { ...state, selectedAccount: action.payload };\n    case \"SET_NEW_TRANSACTION\":\n      return { ...state, newTransaction: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const TransactionProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const fetchUserAccounts = async (userId) => {\n    try {\n      const accounts = await fetchUserAccountsAPI(userId);\n      dispatch({ type: \"SET_ACCOUNTS\", payload: accounts });\n    } catch (error) {\n      console.error(\"Error fetching user accounts:\", error);\n    }\n  };\n\n  const fetchTransactions = async (accountId) => {\n    try {\n      const transactions = await fetchTransactionsAPI(accountId);\n      dispatch({ type: \"SET_TRANSACTIONS\", payload: transactions });\n    } catch (error) {\n      console.error(\"Error fetching transactions:\", error);\n    }\n  };\n\n  return (\n    <TransactionContext.Provider\n      value={{\n        state,\n        fetchUserAccounts,\n        fetchTransactions,\n        dispatch,\n      }}\n    >\n      {children}\n    </TransactionContext.Provider>\n  );\n};\n\nexport const useTransactionContext = () => useContext(TransactionContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}