{"ast":null,"code":"var _jsxFileName = \"/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-page.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Container, Row, Form, Card, Button, Modal } from \"react-bootstrap\";\nimport { TransactionContext } from \"./transaction-context\";\nimport TransactionList from \"./transaction-list\";\nimport AddTransactionForm from \"./add-transaction-form\";\nimport \"./transaction-page.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TransactionPage() {\n  _s();\n  const {\n    state,\n    handleAccountChange,\n    handleInputChange,\n    handleSubmit,\n    fetchUserAccounts\n  } = useContext(TransactionContext);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      if (user && user.userId) {\n        console.log(`Fetching accounts for userId: ${user.userId}`);\n        fetchUserAccounts(user.userId);\n      }\n    }\n  }, [fetchUserAccounts]);\n  const handleCloseModal = () => setShowModal(false);\n  const handleShowModal = () => setShowModal(true);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transaction List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"selectAccount\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Select Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        onChange: handleAccountChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), state.accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: account.accountId,\n          children: account.accountName\n        }, account.accountId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), state.selectedAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: state.selectedAccount.accountName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), state.selectedAccount.balance && /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Balance: \", state.selectedAccount.balance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), state.selectedAccount.apr && /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"APR: \", state.selectedAccount.apr]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), state.selectedAccount.type && /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Type: \", state.selectedAccount.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), state.selectedAccount.creditLimit && /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Credit Limit: \", state.selectedAccount.creditLimit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(TransactionList, {\n        transactions: state.transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShowModal,\n      children: \"Add New Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add New Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n          newTransaction: state.newTransaction,\n          handleInputChange: handleInputChange,\n          handleSubmit: e => {\n            handleSubmit(e);\n            handleCloseModal();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionPage, \"/xp6IgY+EbVh3+ecKs19ivu4fHM=\");\n_c = TransactionPage;\nvar _c;\n$RefreshReg$(_c, \"TransactionPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Container","Row","Form","Card","Button","Modal","TransactionContext","TransactionList","AddTransactionForm","jsxDEV","_jsxDEV","TransactionPage","_s","state","handleAccountChange","handleInputChange","handleSubmit","fetchUserAccounts","showModal","setShowModal","userString","localStorage","getItem","user","JSON","parse","userId","console","log","handleCloseModal","handleShowModal","style","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","as","onChange","value","accounts","map","account","accountId","accountName","selectedAccount","Body","Title","balance","Text","apr","type","creditLimit","transactions","variant","onClick","show","onHide","Header","closeButton","newTransaction","e","_c","$RefreshReg$"],"sources":["/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-page.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Container, Row, Form, Card, Button, Modal } from \"react-bootstrap\";\nimport { TransactionContext } from \"./transaction-context\";\nimport TransactionList from \"./transaction-list\";\nimport AddTransactionForm from \"./add-transaction-form\";\nimport \"./transaction-page.css\";\n\nexport default function TransactionPage() {\n  const {\n    state,\n    handleAccountChange,\n    handleInputChange,\n    handleSubmit,\n    fetchUserAccounts,\n  } = useContext(TransactionContext);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      if (user && user.userId) {\n        console.log(`Fetching accounts for userId: ${user.userId}`);\n        fetchUserAccounts(user.userId);\n      }\n    }\n  }, [fetchUserAccounts]);\n\n  const handleCloseModal = () => setShowModal(false);\n  const handleShowModal = () => setShowModal(true);\n\n  return (\n    <Container style={{ marginTop: \"20px\" }}>\n      <h1>Transaction List</h1>\n      <Form.Group controlId=\"selectAccount\">\n        <Form.Label>Select Account</Form.Label>\n        <Form.Control as=\"select\" onChange={handleAccountChange}>\n          <option value=\"\">Select an account</option>\n          {state.accounts.map((account) => (\n            <option key={account.accountId} value={account.accountId}>\n              {account.accountName}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      {state.selectedAccount && (\n        <div>\n          <h2>Account Details</h2>\n          <Card>\n            <Card.Body>\n              <Card.Title>{state.selectedAccount.accountName}</Card.Title>\n              {state.selectedAccount.balance && (\n                <Card.Text>Balance: {state.selectedAccount.balance}</Card.Text>\n              )}\n              {state.selectedAccount.apr && (\n                <Card.Text>APR: {state.selectedAccount.apr}</Card.Text>\n              )}\n              {state.selectedAccount.type && (\n                <Card.Text>Type: {state.selectedAccount.type}</Card.Text>\n              )}\n              {state.selectedAccount.creditLimit && (\n                <Card.Text>\n                  Credit Limit: {state.selectedAccount.creditLimit}\n                </Card.Text>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      )}\n      <Row>\n        <TransactionList transactions={state.transactions} />\n      </Row>\n      <Button variant=\"primary\" onClick={handleShowModal}>\n        Add New Transaction\n      </Button>\n\n      <Modal show={showModal} onHide={handleCloseModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add New Transaction</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <AddTransactionForm\n            newTransaction={state.newTransaction}\n            handleInputChange={handleInputChange}\n            handleSubmit={(e) => {\n              handleSubmit(e);\n              handleCloseModal();\n            }}\n          />\n        </Modal.Body>\n      </Modal>\n    </Container>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,SAAS,EAAEC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAEC,KAAK,QAAQ,iBAAiB;AAC3E,SAASC,kBAAkB,QAAQ,uBAAuB;AAC1D,OAAOC,eAAe,MAAM,oBAAoB;AAChD,OAAOC,kBAAkB,MAAM,wBAAwB;AACvD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM;IACJC,KAAK;IACLC,mBAAmB;IACnBC,iBAAiB;IACjBC,YAAY;IACZC;EACF,CAAC,GAAGpB,UAAU,CAACS,kBAAkB,CAAC;EAClC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMsB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACd,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;MACnC,IAAIG,IAAI,IAAIA,IAAI,CAACG,MAAM,EAAE;QACvBC,OAAO,CAACC,GAAG,CAAC,iCAAiCL,IAAI,CAACG,MAAM,EAAE,CAAC;QAC3DT,iBAAiB,CAACM,IAAI,CAACG,MAAM,CAAC;MAChC;IACF;EACF,CAAC,EAAE,CAACT,iBAAiB,CAAC,CAAC;EAEvB,MAAMY,gBAAgB,GAAGA,CAAA,KAAMV,YAAY,CAAC,KAAK,CAAC;EAClD,MAAMW,eAAe,GAAGA,CAAA,KAAMX,YAAY,CAAC,IAAI,CAAC;EAEhD,oBACET,OAAA,CAACV,SAAS;IAAC+B,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACtCvB,OAAA;MAAAuB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB3B,OAAA,CAACR,IAAI,CAACoC,KAAK;MAACC,SAAS,EAAC,eAAe;MAAAN,QAAA,gBACnCvB,OAAA,CAACR,IAAI,CAACsC,KAAK;QAAAP,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACvC3B,OAAA,CAACR,IAAI,CAACuC,OAAO;QAACC,EAAE,EAAC,QAAQ;QAACC,QAAQ,EAAE7B,mBAAoB;QAAAmB,QAAA,gBACtDvB,OAAA;UAAQkC,KAAK,EAAC,EAAE;UAAAX,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC1CxB,KAAK,CAACgC,QAAQ,CAACC,GAAG,CAAEC,OAAO,iBAC1BrC,OAAA;UAAgCkC,KAAK,EAAEG,OAAO,CAACC,SAAU;UAAAf,QAAA,EACtDc,OAAO,CAACE;QAAW,GADTF,OAAO,CAACC,SAAS;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEtB,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACZxB,KAAK,CAACqC,eAAe,iBACpBxC,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAAuB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxB3B,OAAA,CAACP,IAAI;QAAA8B,QAAA,eACHvB,OAAA,CAACP,IAAI,CAACgD,IAAI;UAAAlB,QAAA,gBACRvB,OAAA,CAACP,IAAI,CAACiD,KAAK;YAAAnB,QAAA,EAAEpB,KAAK,CAACqC,eAAe,CAACD;UAAW;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,EAC3DxB,KAAK,CAACqC,eAAe,CAACG,OAAO,iBAC5B3C,OAAA,CAACP,IAAI,CAACmD,IAAI;YAAArB,QAAA,GAAC,WAAS,EAACpB,KAAK,CAACqC,eAAe,CAACG,OAAO;UAAA;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC/D,EACAxB,KAAK,CAACqC,eAAe,CAACK,GAAG,iBACxB7C,OAAA,CAACP,IAAI,CAACmD,IAAI;YAAArB,QAAA,GAAC,OAAK,EAACpB,KAAK,CAACqC,eAAe,CAACK,GAAG;UAAA;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CACvD,EACAxB,KAAK,CAACqC,eAAe,CAACM,IAAI,iBACzB9C,OAAA,CAACP,IAAI,CAACmD,IAAI;YAAArB,QAAA,GAAC,QAAM,EAACpB,KAAK,CAACqC,eAAe,CAACM,IAAI;UAAA;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CACzD,EACAxB,KAAK,CAACqC,eAAe,CAACO,WAAW,iBAChC/C,OAAA,CAACP,IAAI,CAACmD,IAAI;YAAArB,QAAA,GAAC,gBACK,EAACpB,KAAK,CAACqC,eAAe,CAACO,WAAW;UAAA;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CACZ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACN,eACD3B,OAAA,CAACT,GAAG;MAAAgC,QAAA,eACFvB,OAAA,CAACH,eAAe;QAACmD,YAAY,EAAE7C,KAAK,CAAC6C;MAAa;QAAAxB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACN3B,OAAA,CAACN,MAAM;MAACuD,OAAO,EAAC,SAAS;MAACC,OAAO,EAAE9B,eAAgB;MAAAG,QAAA,EAAC;IAEpD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAET3B,OAAA,CAACL,KAAK;MAACwD,IAAI,EAAE3C,SAAU;MAAC4C,MAAM,EAAEjC,gBAAiB;MAAAI,QAAA,gBAC/CvB,OAAA,CAACL,KAAK,CAAC0D,MAAM;QAACC,WAAW;QAAA/B,QAAA,eACvBvB,OAAA,CAACL,KAAK,CAAC+C,KAAK;UAAAnB,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACf3B,OAAA,CAACL,KAAK,CAAC8C,IAAI;QAAAlB,QAAA,eACTvB,OAAA,CAACF,kBAAkB;UACjByD,cAAc,EAAEpD,KAAK,CAACoD,cAAe;UACrClD,iBAAiB,EAAEA,iBAAkB;UACrCC,YAAY,EAAGkD,CAAC,IAAK;YACnBlD,YAAY,CAACkD,CAAC,CAAC;YACfrC,gBAAgB,CAAC,CAAC;UACpB;QAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEhB;AAACzB,EAAA,CAtFuBD,eAAe;AAAAwD,EAAA,GAAfxD,eAAe;AAAA,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}