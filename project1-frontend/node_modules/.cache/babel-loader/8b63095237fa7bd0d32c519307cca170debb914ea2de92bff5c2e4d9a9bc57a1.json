{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshgerrard/Desktop/Java_Projects/Group-1/project1-frontend/src/components/AccountComponent/account-page.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport './account-page.css';\nimport AccountList from './account-list';\nimport AddAccountForm from './a';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"http://localhost:8080\";\nfunction closeAccount(accountId, setState) {\n  axios.delete(`${API_BASE_URL}/accounts/delete/${accountId}`).then(response => {\n    if (response.data) {\n      setState(prevState => ({\n        ...prevState,\n        accounts: prevState.accounts.filter(account => account.accountId !== accountId)\n      }));\n      console.log(`Account with ID ${accountId} deleted.`);\n    }\n  }).catch(error => {\n    console.error('There was an error deleting the account.', error);\n  });\n}\nexport default function AccountPage() {\n  _s();\n  const [state, setState] = useState({\n    accounts: [],\n    newAccount: {\n      accountName: '',\n      balance: '',\n      accountType: 'CREDIT',\n      creditLimit: '',\n      apr: '',\n      principal: '',\n      loanDisbursementDate: '',\n      loanRepaymentDate: '',\n      minMonthlyPayment: ''\n    }\n  });\n  useEffect(() => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      var userId = user.id;\n    }\n    axios.get(`${API_BASE_URL}/users/${userId}/accounts`).then(response => {\n      setState(prevState => ({\n        ...prevState,\n        accounts: response.data\n      }));\n    }).catch(error => console.error('There was an error fetching the accounts.', error));\n  }, []);\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setState(prevState => ({\n      ...prevState,\n      newAccount: {\n        ...prevState.newAccount,\n        [name]: value\n      }\n    }));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      var userId = user.id;\n    }\n    axios.post(`${API_BASE_URL}/accounts/add/${userId}`, state.newAccount).then(response => {\n      setState(prevState => ({\n        ...prevState,\n        accounts: [...prevState.accounts, response.data],\n        newAccount: {\n          accountName: '',\n          balance: '',\n          accountType: 'CREDIT',\n          creditLimit: '',\n          apr: '',\n          principal: '',\n          loanDisbursementDate: '',\n          loanRepaymentDate: '',\n          minMonthlyPayment: ''\n        }\n      }));\n    }).catch(error => {\n      console.error('There was an error creating the account.', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Account List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountList, {\n      accounts: state.accounts,\n      closeAccount: closeAccount,\n      setState: setState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddAccountForm, {\n      newAccount: state.newAccount,\n      handleInputChange: handleInputChange,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountPage, \"LByVRw6BGQMCqSARsKzuqNdWSCc=\");\n_c = AccountPage;\nvar _c;\n$RefreshReg$(_c, \"AccountPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","AccountList","AddAccountForm","jsxDEV","_jsxDEV","API_BASE_URL","closeAccount","accountId","setState","delete","then","response","data","prevState","accounts","filter","account","console","log","catch","error","AccountPage","_s","state","newAccount","accountName","balance","accountType","creditLimit","apr","principal","loanDisbursementDate","loanRepaymentDate","minMonthlyPayment","userString","localStorage","getItem","user","JSON","parse","userId","id","get","handleInputChange","event","name","value","target","handleSubmit","preventDefault","post","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/utkarshgerrard/Desktop/Java_Projects/Group-1/project1-frontend/src/components/AccountComponent/account-page.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nimport './account-page.css';\nimport AccountList from './account-list';\nimport AddAccountForm from './a';\n\nconst API_BASE_URL = \"http://localhost:8080\";\n\nfunction closeAccount(accountId, setState) {\n  axios.delete(`${API_BASE_URL}/accounts/delete/${accountId}`)\n    .then(response => {\n      if (response.data) {\n        setState(prevState => ({\n          ...prevState,\n          accounts: prevState.accounts.filter(account => account.accountId !== accountId)\n        }));\n        console.log(`Account with ID ${accountId} deleted.`);\n      }\n    })\n    .catch(error => {\n      console.error('There was an error deleting the account.', error);\n    });\n}\n\nexport default function AccountPage() {\n  const [state, setState] = useState({\n    accounts: [],\n    newAccount: {\n      accountName: '',\n      balance: '',\n      accountType: 'CREDIT',\n      creditLimit: '',\n      apr: '',\n      principal: '',\n      loanDisbursementDate: '',\n      loanRepaymentDate: '',\n      minMonthlyPayment: ''\n    }\n  });\n\n  useEffect(() => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      var userId = user.id;\n    }\n    axios.get(`${API_BASE_URL}/users/${userId}/accounts`)\n      .then(response => {\n        setState(prevState => ({\n          ...prevState,\n          accounts: response.data\n        }));\n      })\n      .catch(error => console.error('There was an error fetching the accounts.', error));\n  }, []);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setState(prevState => ({\n      ...prevState,\n      newAccount: {\n        ...prevState.newAccount,\n        [name]: value\n      }\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      var userId = user.id;\n    }\n\n    axios.post(`${API_BASE_URL}/accounts/add/${userId}`, state.newAccount)\n      .then(response => {\n        setState(prevState => ({\n          ...prevState,\n          accounts: [...prevState.accounts, response.data],\n          newAccount: {\n            accountName: '',\n            balance: '',\n            accountType: 'CREDIT',\n            creditLimit: '',\n            apr: '',\n            principal: '',\n            loanDisbursementDate: '',\n            loanRepaymentDate: '',\n            minMonthlyPayment: ''\n          }\n        }));\n      })\n      .catch(error => {\n        console.error('There was an error creating the account.', error);\n      });\n  };\n\n  return (\n    <Container>\n      <h1>Account List</h1>\n      <AccountList accounts={state.accounts} closeAccount={closeAccount} setState={setState} />\n      <h2>Add New Account</h2>\n      <AddAccountForm newAccount={state.newAccount} handleInputChange={handleInputChange} handleSubmit={handleSubmit} />\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}