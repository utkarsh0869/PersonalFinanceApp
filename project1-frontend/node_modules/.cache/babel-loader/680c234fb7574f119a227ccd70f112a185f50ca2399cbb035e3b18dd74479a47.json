{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshgerrard/Desktop/Java_Projects/Group-1/project1-frontend/src/components/AccountComponent/account-context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { fetchAccountsApi, addAccountApi, deleteAccountApi } from './account-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AccountContext = /*#__PURE__*/createContext();\nexport const AccountProvider = ({\n  children\n}) => {\n  _s();\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const [state, setState] = useState({\n    accounts: [],\n    newAccount: {\n      accountName: '',\n      balance: '',\n      accountType: 'CREDIT',\n      creditLimit: '',\n      apr: '',\n      principal: '',\n      loanDisbursementDate: '',\n      loanRepaymentDate: '',\n      minMonthlyPayment: ''\n    }\n  });\n  const fetchAccounts = () => {\n    console.log(\"here in fetch account of context class\");\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      var userId = user.id;\n    }\n    fetchAccountsApi(userId).then(response => {\n      setState(prevState => ({\n        ...prevState,\n        accounts: response.data\n      }));\n    }).catch(error => console.error('There was an error fetching the accounts.', error));\n  };\n  const handleUpdateAccount = updatedAccount => {\n    // Update the accounts list in state with the updated account\n    const updatedAccounts = state.accounts.map(account => account.accountId === updatedAccount.accountId ? updatedAccount : account);\n    setState(prevState => ({\n      ...prevState,\n      accounts: updatedAccounts\n    }));\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setState(prevState => ({\n      ...prevState,\n      newAccount: {\n        ...prevState.newAccount,\n        [name]: value\n      }\n    }));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      var userId = user.id;\n    }\n    addAccountApi(userId, state.newAccount).then(response => {\n      setState(prevState => ({\n        ...prevState,\n        accounts: [...prevState.accounts, response.data],\n        newAccount: {\n          accountName: '',\n          balance: '',\n          accountType: 'CREDIT',\n          creditLimit: '',\n          apr: '',\n          principal: '',\n          loanDisbursementDate: '',\n          loanRepaymentDate: '',\n          minMonthlyPayment: ''\n        }\n      }));\n    }).catch(error => {\n      console.error('There was an error creating the account.', error);\n    });\n  };\n  const closeAccount = accountId => {\n    deleteAccountApi(accountId).then(response => {\n      if (response.data) {\n        setState(prevState => ({\n          ...prevState,\n          accounts: prevState.accounts.filter(account => account.accountId !== accountId)\n        }));\n        console.log(`Account with ID ${accountId} deleted.`);\n      }\n    }).catch(error => {\n      console.error('There was an error deleting the account.', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AccountContext.Provider, {\n    value: {\n      state,\n      fetchAccounts,\n      handleInputChange,\n      handleSubmit,\n      closeAccount,\n      setState,\n      handleUpdateAccount,\n      showUpdateModal,\n      setShowUpdateModal,\n      selectedAccount,\n      setSelectedAccount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountProvider, \"XasnpWF70GpiiyLnoPWdHN3aBaU=\");\n_c = AccountProvider;\nexport const useAccountContext = () => {\n  _s2();\n  return useContext(AccountContext);\n};\n_s2(useAccountContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AccountProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","fetchAccountsApi","addAccountApi","deleteAccountApi","jsxDEV","_jsxDEV","AccountContext","AccountProvider","children","_s","showUpdateModal","setShowUpdateModal","selectedAccount","setSelectedAccount","state","setState","accounts","newAccount","accountName","balance","accountType","creditLimit","apr","principal","loanDisbursementDate","loanRepaymentDate","minMonthlyPayment","fetchAccounts","console","log","userString","localStorage","getItem","user","JSON","parse","userId","id","then","response","prevState","data","catch","error","handleUpdateAccount","updatedAccount","updatedAccounts","map","account","accountId","handleInputChange","event","name","value","target","handleSubmit","preventDefault","closeAccount","filter","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAccountContext","_s2","$RefreshReg$"],"sources":["/Users/utkarshgerrard/Desktop/Java_Projects/Group-1/project1-frontend/src/components/AccountComponent/account-context.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\nimport { fetchAccountsApi, addAccountApi, deleteAccountApi } from './account-api';\n\nexport const AccountContext = createContext();\n\nexport const AccountProvider = ({ children }) => {\n\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [selectedAccount, setSelectedAccount] = useState(null);\n\n  const [state, setState] = useState({\n    accounts: [],\n    newAccount: {\n      accountName: '',\n      balance: '',\n      accountType: 'CREDIT',\n      creditLimit: '',\n      apr: '',\n      principal: '',\n      loanDisbursementDate: '',\n      loanRepaymentDate: '',\n      minMonthlyPayment: ''\n    }\n  });\n\n  const fetchAccounts = () => {\n    console.log(\"here in fetch account of context class\")\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      var userId = user.id;\n    }\n    fetchAccountsApi(userId)\n      .then(response => {\n        setState(prevState => ({\n          ...prevState,\n          accounts: response.data\n        }));\n      })\n      .catch(error => console.error('There was an error fetching the accounts.', error));\n  };\n\n  const handleUpdateAccount = (updatedAccount) => {\n    // Update the accounts list in state with the updated account\n    const updatedAccounts = state.accounts.map(account =>\n      account.accountId === updatedAccount.accountId ? updatedAccount : account\n    );\n    setState(prevState => ({\n      ...prevState,\n      accounts: updatedAccounts\n    }));\n  };\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setState(prevState => ({\n      ...prevState,\n      newAccount: {\n        ...prevState.newAccount,\n        [name]: value\n      }\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      var userId = user.id;\n    }\n\n    addAccountApi(userId, state.newAccount)\n      .then(response => {\n        setState(prevState => ({\n          ...prevState,\n          accounts: [...prevState.accounts, response.data],\n          newAccount: {\n            accountName: '',\n            balance: '',\n            accountType: 'CREDIT',\n            creditLimit: '',\n            apr: '',\n            principal: '',\n            loanDisbursementDate: '',\n            loanRepaymentDate: '',\n            minMonthlyPayment: ''\n          }\n        }));\n      })\n      .catch(error => {\n        console.error('There was an error creating the account.', error);\n      });\n  };\n\n  const closeAccount = (accountId) => {\n    deleteAccountApi(accountId)\n      .then(response => {\n        if (response.data) {\n          setState(prevState => ({\n            ...prevState,\n            accounts: prevState.accounts.filter(account => account.accountId !== accountId)\n          }));\n          console.log(`Account with ID ${accountId} deleted.`);\n        }\n      })\n      .catch(error => {\n        console.error('There was an error deleting the account.', error);\n      });\n  };\n\n  return (\n    <AccountContext.Provider value={{ state, fetchAccounts, handleInputChange, handleSubmit, closeAccount, setState, handleUpdateAccount,\n      showUpdateModal, setShowUpdateModal, selectedAccount, setSelectedAccount }}>\n      {children}\n    </AccountContext.Provider>\n  );\n};\n\nexport const useAccountContext = () => {\n  return useContext(AccountContext);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}