{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshgerrard/Desktop/Java_Projects/Group-1/project1-frontend/src/components/AccountComponent/account-list.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Col, Card, Button } from 'react-bootstrap';\nimport { useAccountContext } from './account-context';\nimport UpdateAccountModal from './update-account-modal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccountList = () => {\n  _s();\n  const {\n    closeAccount,\n    fetchAccounts,\n    state,\n    setState\n  } = useAccountContext();\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  useEffect(() => {\n    // Fetch accounts on component mount\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      const user = JSON.parse(userString);\n      var userId = user.id;\n    }\n    console.log(\"here in account list\");\n    fetchAccounts(userId);\n  }, []);\n  const handleEditAccount = account => {\n    console.log(account);\n    setSelectedAccount(account);\n    setShowUpdateModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowUpdateModal(false);\n    setSelectedAccount(null);\n  };\n  const handleUpdateAccount = updatedAccount => {\n    // Update the accounts list in state with the updated account\n    const updatedAccounts = accounts.map(account => account.accountId === updatedAccount.accountId ? updatedAccount : account);\n    setState(prevState => ({\n      ...prevState,\n      accounts: updatedAccounts\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [state.accounts.map(account => /*#__PURE__*/_jsxDEV(Col, {\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: account.accountName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            as: \"div\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: [\"Balance: $\", account.balance]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Type: \", account.accountType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Credit Limit: $\", account.creditLimit]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between m-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => closeAccount(account.accountId),\n              children: \"Close Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => handleEditAccount(account),\n              children: \"Edit Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, account.accountId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)), selectedAccount && /*#__PURE__*/_jsxDEV(UpdateAccountModal, {\n      account: selectedAccount,\n      show: showUpdateModal,\n      onHide: handleCloseModal,\n      onUpdate: handleUpdateAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_s(AccountList, \"H6ayZLVFwH3bNyMJTPLFjmpszog=\", false, function () {\n  return [useAccountContext];\n});\n_c = AccountList;\nexport default AccountList;\nvar _c;\n$RefreshReg$(_c, \"AccountList\");","map":{"version":3,"names":["React","useState","useEffect","Col","Card","Button","useAccountContext","UpdateAccountModal","jsxDEV","_jsxDEV","Fragment","_Fragment","AccountList","_s","closeAccount","fetchAccounts","state","setState","showUpdateModal","setShowUpdateModal","selectedAccount","setSelectedAccount","userString","localStorage","getItem","user","JSON","parse","userId","id","console","log","handleEditAccount","account","handleCloseModal","handleUpdateAccount","updatedAccount","updatedAccounts","accounts","map","accountId","prevState","children","xs","sm","md","lg","className","Body","Title","accountName","fileName","_jsxFileName","lineNumber","columnNumber","Text","as","style","fontWeight","balance","accountType","creditLimit","variant","onClick","show","onHide","onUpdate","_c","$RefreshReg$"],"sources":["/Users/utkarshgerrard/Desktop/Java_Projects/Group-1/project1-frontend/src/components/AccountComponent/account-list.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Col, Card, Button } from 'react-bootstrap';\nimport { useAccountContext } from './account-context';\nimport UpdateAccountModal from './update-account-modal';\n\nconst AccountList = () => {\n    const { closeAccount, fetchAccounts, state, setState } = useAccountContext();\n    const [showUpdateModal, setShowUpdateModal] = useState(false);\n    const [selectedAccount, setSelectedAccount] = useState(null);\n\n    useEffect(() => {\n      // Fetch accounts on component mount\n      const userString = localStorage.getItem(\"user\");\n      if (userString) {\n        const user = JSON.parse(userString);\n        var userId = user.id;\n      }\n      console.log(\"here in account list\");\n      fetchAccounts(userId);\n    }, []);\n\n    const handleEditAccount = (account) => {\n      console.log(account);\n      setSelectedAccount(account);\n      setShowUpdateModal(true);\n    };\n\n    const handleCloseModal = () => {\n      setShowUpdateModal(false);\n      setSelectedAccount(null);\n    };\n\n    const handleUpdateAccount = (updatedAccount) => {\n      // Update the accounts list in state with the updated account\n      const updatedAccounts = accounts.map(account =>\n        account.accountId === updatedAccount.accountId ? updatedAccount : account\n      );\n      setState(prevState => ({\n        ...prevState,\n        accounts: updatedAccounts\n      }));\n    };\n  \n    return (\n      <>\n        {state.accounts.map(account => (\n          <Col key={account.accountId} xs={12} sm={6} md={4} lg={3} className=\"mb-4\">\n            <Card>\n              <Card.Body>\n                <Card.Title>{account.accountName}</Card.Title>\n                <Card.Text as=\"div\">\n                  <div style={{ fontWeight: 'bold' }}>Balance: ${account.balance}</div>\n                  <div>Type: {account.accountType}</div>\n                  <div>Credit Limit: ${account.creditLimit}</div>\n                  {/* ... other details */}\n                </Card.Text>\n                <div className=\"d-flex justify-content-between m-2\">\n                  <Button variant=\"danger\" onClick={() => closeAccount(account.accountId)}>Close Account</Button>\n                  <Button variant=\"primary\" onClick={() => handleEditAccount(account)}>Edit Account</Button>\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n\n        {/* Modal for updating account */}\n        {selectedAccount && (\n          <UpdateAccountModal\n            account={selectedAccount}\n            show={showUpdateModal}\n            onHide={handleCloseModal}\n            onUpdate={handleUpdateAccount}\n          />\n        )}\n      </>\n    );\n  };\n  \n\nexport default AccountList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}