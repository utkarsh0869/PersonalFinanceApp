{"ast":null,"code":"const API_BASE_URL = \"http://localhost:8080\";\nexport const fetchTransactionsApi = async accountId => {\n  const response = await fetch(`${API_BASE_URL}/transactions/account/${accountId}`);\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n};\nexport const addTransactionApi = async (accountId, newTransaction) => {\n  const response = await fetch(`${API_BASE_URL}/transactions/${accountId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(newTransaction),\n    mode: \"no-cors\" // or 'no-cors'\n  });\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n};\nexport const deleteTransactionApi = async transactionId => {\n  const response = await fetch(`${API_BASE_URL}/transactions/${transactionId}`, {\n    method: \"DELETE\",\n    mode: \"no-cors\" // or 'no-cors'\n  });\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n};\nexport const fetchUserAccountsApi = async userId => {\n  const response = await fetch(`${API_BASE_URL}/users/${userId}/accounts`, {\n    mode: \"no-cors\" // or 'no-cors'\n  });\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_BASE_URL","fetchTransactionsApi","accountId","response","fetch","ok","Error","json","addTransactionApi","newTransaction","method","headers","body","JSON","stringify","mode","deleteTransactionApi","transactionId","fetchUserAccountsApi","userId"],"sources":["/Users/josemarin/Desktop/project1/Group-1/project1-frontend/src/components/TransactionComponent/transaction-api.js"],"sourcesContent":["const API_BASE_URL = \"http://localhost:8080\";\n\nexport const fetchTransactionsApi = async (accountId) => {\n  const response = await fetch(\n    `${API_BASE_URL}/transactions/account/${accountId}`\n  );\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n};\n\nexport const addTransactionApi = async (accountId, newTransaction) => {\n  const response = await fetch(`${API_BASE_URL}/transactions/${accountId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(newTransaction),\n    mode: \"no-cors\", // or 'no-cors'\n  });\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n};\n\nexport const deleteTransactionApi = async (transactionId) => {\n  const response = await fetch(\n    `${API_BASE_URL}/transactions/${transactionId}`,\n    {\n      method: \"DELETE\",\n      mode: \"no-cors\", // or 'no-cors'\n    }\n  );\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n};\n\nexport const fetchUserAccountsApi = async (userId) => {\n  const response = await fetch(`${API_BASE_URL}/users/${userId}/accounts`, {\n    mode: \"no-cors\", // or 'no-cors'\n  });\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,SAAS,IAAK;EACvD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGJ,YAAY,yBAAyBE,SAAS,EACnD,CAAC;EACD,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAON,SAAS,EAAEO,cAAc,KAAK;EACpE,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,iBAAiBE,SAAS,EAAE,EAAE;IACxEQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,cAAc,CAAC;IACpCM,IAAI,EAAE,SAAS,CAAE;EACnB,CAAC,CAAC;EACF,IAAI,CAACZ,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMS,oBAAoB,GAAG,MAAOC,aAAa,IAAK;EAC3D,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGJ,YAAY,iBAAiBiB,aAAa,EAAE,EAC/C;IACEP,MAAM,EAAE,QAAQ;IAChBK,IAAI,EAAE,SAAS,CAAE;EACnB,CACF,CAAC;EACD,IAAI,CAACZ,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMW,oBAAoB,GAAG,MAAOC,MAAM,IAAK;EACpD,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,UAAUmB,MAAM,WAAW,EAAE;IACvEJ,IAAI,EAAE,SAAS,CAAE;EACnB,CAAC,CAAC;EACF,IAAI,CAACZ,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}